services:
  # Development PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: mimivibe-dev-db
    environment:
      POSTGRES_USER: mimi
      POSTGRES_PASSWORD: mimi_dev
      POSTGRES_DB: mimivibe_dev
    ports:
      - "5433:5432"
    volumes:
      - mimivibe_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mimi -d mimivibe_dev"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - mimivibe-network
    profiles:
      - dev

  # Redis for queue management
  redis:
    image: redis:7-alpine
    container_name: mimivibe-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - mimivibe-network

  # Backend API and Queue Worker
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: mimivibe-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - PROMPT_ENCRYPTION_KEY=${PROMPT_ENCRYPTION_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://mimivibe-ai.vercel.app}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health/liveness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mimivibe-network

  # Queue Worker (separate instance for scaling)
  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: mimivibe-worker
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - PROMPT_ENCRYPTION_KEY=${PROMPT_ENCRYPTION_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    command: ["npm", "run", "worker"]
    healthcheck:
      test: ["CMD", "pgrep", "-f", "worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mimivibe-network

volumes:
  mimivibe_dev_data:
  redis_data:
    driver: local

networks:
  mimivibe-network:
    driver: bridge
